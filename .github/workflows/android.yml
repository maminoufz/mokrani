name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Fix build.gradle.kts files
        run: |
          # Supprimer le bloc ext et ajouter les variables Kotlin DSL
          sed -i '' '/ext {/,/}/d' android/build.gradle.kts
          
          # Ajouter les variables et la configuration Kotlin DSL
          cat > android/build.gradle.kts << 'EOL'
          // Variables de version en Kotlin DSL
          val kotlinVersion = "1.9.0"
          val compileSdkVersion = 34
          val minSdkVersion = 21
          val targetSdkVersion = 34
          val ndkVersion = "27.0.12077973"

          buildscript {
              repositories {
                  google()
                  mavenCentral()
              }
              dependencies {
                  classpath("com.android.tools.build:gradle:8.1.0")
                  classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
              }
          }

          allprojects {
              repositories {
                  google()
                  mavenCentral()
              }
          }

          // Configuration commune pour tous les sous-projets Android
          subprojects {
              afterEvaluate {
                  if (project.plugins.hasPlugin("com.android.application") || 
                      project.plugins.hasPlugin("com.android.library")) {
                      android {
                          compileSdk = compileSdkVersion
                          defaultConfig {
                              minSdk = minSdkVersion
                              targetSdk = targetSdkVersion
                          }
                          ndkVersion = ndkVersion
                      }
                  }
              }
          }

          // Dir de sortie partagé (« ../../build ») :
          val newBuildDir: Directory = rootProject.layout.buildDirectory
              .dir("../../build")
              .get()
          rootProject.layout.buildDirectory.value(newBuildDir)

          // Chaque sous-projet écrit dans « ../../build/<module> »
          subprojects {
              val newSubprojectBuildDir: Directory = newBuildDir.dir(project.name)
              project.layout.buildDirectory.value(newSubprojectBuildDir)
              project.evaluationDependsOn(":app")   // s'assure que :app est évalué d'abord
          }

          // Tâche clean : supprime tout le répertoire build partagé
          tasks.register("clean", Delete::class) {
              delete(rootProject.buildDir)
          }
          EOL

      - name: Run Flutter build
        run: |
          flutter build apk --debug
          flutter build appbundle --debug

      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: debug-apk
          path: build/app/outputs/flutter-apk/app-debug.apk 